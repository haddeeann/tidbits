class Solution(object):
    def testThreeSum(self, arr):
        sum = 0
        for x in arr:
            sum += x
        return sum

    def threeSumClosest(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        nums.sort()
        diff = None
        count = 0
        least_diff = None
        least_sum = None
        if len(nums) <= 3:
             return self.testThreeSum(nums)

        for l, left in enumerate(nums[:-2]):
            r = len(nums) - 1
            m = l + 1

            while m < r:
                count += 1
                middle = nums[m]
                right = nums[r]
                sum = self.testThreeSum([left, middle, right])
                diff = abs(sum - target)
                if least_diff is None or diff < least_diff:
                    least_diff = diff
                    least_sum = left + middle + right
                    if least_sum == target:
                        return least_sum

                if target > middle:
                    if nums[m] == nums[m + 1]:
                        while m < r and nums[m] == nums[m + 1]:
                            m += 1
                    else:
                        m += 1
                elif target < right:
                    if nums[r] == nums[r - 1]:
                        while r > m and nums[r] == nums[r - 1]:
                            r -= 1
                    else:
                        r -= 1
                elif target < middle or target > right:
                    return least_sum
        print(count)
        return least_sum


sol = Solution()

# print(sol.threeSumClosest([0,0,0], 1))
# print(sol.threeSumClosest([1,1,1,1], 4))
# sol.threeSumClosest([0, 1, 2, 3, 4, 5, 6], 3)
print(sol.threeSumClosest([13,252,-87,-431,-148,387,-290,572,-311,-721,222,673,538,919,483,-128,-518,7,-36,-840,233,-184,-541,522,-162,127,-935,-397,761,903,-217,543,906,-503,-826,-342,599,-726,960,-235,436,-91,-511,-793,-658,-143,-524,-609,-728,-734,273,-19,-10,630,-294,-453,149,-581,-405,984,154,-968,623,-631,384,-825,308,779,-7,617,221,394,151,-282,472,332,-5,-509,611,-116,113,672,-497,-182,307,-592,925,766,-62,237,-8,789,318,-314,-792,-632,-781,375,939,-304,-149,544,-742,663,484,802,616,501,-269,-458,-763,-950,-390,-816,683,-219,381,478,-129,602,-931,128,502,508,-565,-243,-695,-943,-987,-692,346,-13,-225,-740,-441,-112,658,855,-531,542,839,795,-664,404,-844,-164,-709,167,953,-941,-848,211,-75,792,-208,569,-647,-714,-76,-603,-852,-665,-897,-627,123,-177,-35,-519,-241,-711,-74,420,-2,-101,715,708,256,-307,466,-602,-636,990,857,70,590,-4,610,-151,196,-981,385,-689,-617,827,360,-959,-289,620,933,-522,597,-667,-882,524,181,-854,275,-600,453,-942,134], -2805))
# goal -2805, output -2806
# print(sol.threeSumClosest([524,428,969,-868,223,333,986,-553,-519,967,-392,709,82,-819,-188,-416,-359,477,-622,-912,-883,3,-278,-265,-195,791,-515,183,-239,-817,764,576,804,647,-743,-766,-642,461,-313,-90,4,882,-933,-921,-24,74,892,578,234,621,-825,806,192,227,-495,585,236,259,-384,873,456,182,93,33,-298,579,240,-922,980,-68,110,855,786,-814,924,-305,-217,-198,-64,634,686,-295,943,-140,-852,-460,190,-907,-311,584,545,-920,-366,902,-446,64,-676,702,-928,-17,-666,766,-493,-249,922,-910,673,-847,-338,-139,-831,-40,-873,271,-913,-448,57,-853,653,-560,-484,668,118,-601,-882,-414,-432,497,349,-605,-881,-324,-488,-443,663,558,684,996,-675,114,441,-144,815,281,286,505,-502,-457,216,678,-353,249,488,-347,-972,-555,-963,-860,87,112,-981,119,-141,834,587,511,-420,816,-838,194,-340,-996,-951,-717,45,-88,-636,-152,-662,-565,-872,-38,507,-76,606,490,-69,-247,-431,1,-777,-201,-52,-56,666,682,-160,174,941,478,178,-916,-832,911,-264,760,-463,-60,-516,-154,763,-762,-808,-850,129,-150,-641,564,649,52,-6,-309,83,655,780,769,388,-287,435,218,727,737,844,777,-528,-72,-781,439,885,-98,-44,-952,-325,-350,-966,650,-930,-388,494,630,313,-480,616,472,399,172,-290,24,669,-215,-504,761,486,-525,75,-131,-656,-979,916,-604,204,-684,-344,904,-619,370,-173,-2,-828,504,-505,-965,-811,221,-49,944,-499,-181,-301,250,753,384,-233,168,344,326,-580,202,39,-857,159,-97,-430,-452,433,256,-582,-165,235,73,-358,-608,871,957,954,-169,907,595,-986,-783,406,-481,-253,792,11], 7651))